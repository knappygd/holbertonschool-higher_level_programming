The ``add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:
    >>> add_integer = __import__('0-add_integer').add_integer

Test case 1:
    >>> add_integer(1, 2)
    3

Test case 2:
    >>> add_integer(1.0, 2)
    3

Test case 3:
    >>> add_integer(None)
    Traceback (most recent call last)
        ...
    TypeError: a must be an integer

Test case 4:
    >>> add_integer(4, "School")
    Traceback (most recent call last)
        ...
    TypeError: b must be an integer

Test case 5:
    >>> add_integer('1', 2)
    Traceback (most recent call last)
        ...
    TypeError: a must be an integer

Test case 6:
    >>> add_integer('1', '2')
    Traceback (most recent call last)
        ...
    TypeError: a must be an integer

Test case 7:
    >>> add_integer("Test")
    Traceback (most recent call last)
        ...
    TypeError: a must be an integer

Test case 8:
    >>> add_integer(2)
    100

Test case 9:
    >>> add:integer(3, float("nan"))
    Traceback (most recent call last)
        ...
    TypeError: cannot convert float NaN to integer